{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","console","log","title","useState","amount","ExpensesFilter","htmlFor","value","selected","onChange","event","target","onChangeFilter","ChartBar","barFillHeight","maxValue","Math","floor","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpenseList","items","length","id","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","App","dummyExpenses","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c3ab16a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useState } from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  // function clickHandler() {}\n  console.log(props.title)\n  const [title, setTitle] = useState(props.title);\n  // console.log('ExpenseItem evaluated by React');\n  \n  const clickHandler = () => {\n    setTitle('Updated!');\n    console.log(title);\n  };\n\n  return (\n    <Card className='expense-item'>\n      {/* <img src={props.image} alt=\"\" /> */}\n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n      {/* <button onClick={clickHandler}>Change Title</button> */}\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from 'react'\r\nimport \"./ExpensesFilter.css\"\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropDownChangeHandler=event =>{\r\n    console.log(event.target.value)\r\n    props.onChangeFilter(event.target.value)\r\n  }\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label htmlFor=\"\">Filter By Year</label>\r\n        <select value={props.selected} onChange={dropDownChangeHandler}>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ExpensesFilter\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\"\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.floor((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  console.log(barFillHeight, props.value, props.maxValue);\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMax = Math.max(...dataPointValues);\r\n  console.log(totalMax);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  console.log(props, \"from expensesChart\")\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  for(const expense of props.expenses){\r\n    const expenseMonth=expense.date.getMonth()\r\n    chartDataPoints[expenseMonth].value+=expense.amount\r\n  }\r\n  return <Chart dataPoints={chartDataPoints}/>;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpenseList.css\";\r\n\r\nconst ExpenseList = (props) => {\r\n  if(props.items.length===0){\r\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses</h2>\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React, { useState } from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport ExpenseList from \"./ExpenseList\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(\n    (expense) => expense.date.getFullYear().toString() === filteredYear\n  );\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpenseList items={filteredExpenses}></ExpenseList>\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  // const [userInput, setUserInput]=useState({\r\n  //   enteredTitle:\"\",\r\n  //   enteredAmount:\"\",\r\n  //   enteredDate:\"\"\r\n  // })\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n    // setUserInput({...userInput, enteredTitle:e.target.value})\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n    // setUserInput({...userInput, enteredAmount:e.target.value})\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n    // setUserInput({ ...userInput, enteredDate: e.target.value });\r\n\r\n  };\r\n  const submitHandler=e =>{\r\n    e.preventDefault()\r\n    const expenseData={\r\n      title:enteredTitle,\r\n      amount:enteredAmount,\r\n      date:new Date(enteredDate)\r\n    }\r\n    props.onSaveExpenseData(expenseData)\r\n    setEnteredTitle(\"\")\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n\r\n  }\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      \r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangeHandler} value={enteredTitle} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n            value={enteredAmount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, {useState} from 'react'\r\nimport ExpenseForm from './ExpenseForm'\r\nimport \"./NewExpense.css\"\r\n\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing]=useState(false)\r\n  const saveExpenseDataHandler=enteredExpenseData =>{\r\n    const expenseData={\r\n      ...enteredExpenseData,\r\n      id:Math.random().toString()\r\n    }\r\n    props.onAddExpense(expenseData)\r\n    setIsEditing(false)\r\n  }\r\n  const startEditingHandler=() =>setIsEditing(true)\r\n  const stopIsEditing=() => setIsEditing(false)\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopIsEditing}></ExpenseForm>}\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewExpense\r\n","import React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst App = () => {\n  const imageURL =\n    \"https://i.guim.co.uk/img/media/933249d24608932fc897fcaa5e8c8bb2bdc9e977/0_0_1799_1080/master/1799.jpg?width=465&quality=45&auto=format&fit=max&dpr=2&s=7256270e0f4a68a3488c83797df6bf2e\";\n  const dummyExpenses = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n  const [expenses, setExpenses]=useState(dummyExpenses)\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpense) => [expense, ...prevExpense]);\n\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}